name: Security & Dependency Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        cache-dependency-path: pnpm-lock.yaml
    
    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile
    
    - name: Run npm audit for backend
      run: |
        cd apps/backend
        echo "🔍 Scanning backend dependencies..."
        pnpm audit --audit-level moderate --json > audit-backend.json || true
        
        # Check if there are any moderate or high vulnerabilities
        VULNS=$(jq '.metadata.vulnerabilities.moderate + .metadata.vulnerabilities.high + .metadata.vulnerabilities.critical' audit-backend.json 2>/dev/null || echo "0")
        
        if [ "$VULNS" -gt 0 ]; then
          echo "⚠️ Found $VULNS moderate+ vulnerabilities in backend"
          pnpm audit --audit-level moderate
        else
          echo "✅ No moderate+ vulnerabilities found in backend"
        fi
    
    - name: Run npm audit for frontend
      run: |
        cd apps/frontend
        echo "🔍 Scanning frontend dependencies..."
        pnpm audit --audit-level moderate --json > audit-frontend.json || true
        
        # Check if there are any moderate or high vulnerabilities
        VULNS=$(jq '.metadata.vulnerabilities.moderate + .metadata.vulnerabilities.high + .metadata.vulnerabilities.critical' audit-frontend.json 2>/dev/null || echo "0")
        
        if [ "$VULNS" -gt 0 ]; then
          echo "⚠️ Found $VULNS moderate+ vulnerabilities in frontend"
          pnpm audit --audit-level moderate
        else
          echo "✅ No moderate+ vulnerabilities found in frontend"
        fi
    
    - name: Check for outdated dependencies
      run: |
        echo "📦 Checking for outdated dependencies..."
        
        echo "### Backend Dependencies" >> $GITHUB_STEP_SUMMARY
        cd apps/backend
        pnpm outdated --format list > outdated-backend.txt || true
        if [ -s outdated-backend.txt ]; then
          echo "⚠️ Outdated backend dependencies found:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          head -10 outdated-backend.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ Backend dependencies are up to date" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### Frontend Dependencies" >> $GITHUB_STEP_SUMMARY
        cd ../frontend
        pnpm outdated --format list > outdated-frontend.txt || true
        if [ -s outdated-frontend.txt ]; then
          echo "⚠️ Outdated frontend dependencies found:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          head -10 outdated-frontend.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ Frontend dependencies are up to date" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: License compliance check
      run: |
        echo "📄 Checking license compliance..."
        
        # Install license checker if not present
        npm install -g license-checker || true
        
        cd apps/backend
        echo "Backend licenses:" > licenses-backend.txt
        license-checker --summary >> licenses-backend.txt || echo "License checker not available" >> licenses-backend.txt
        
        cd ../frontend  
        echo "Frontend licenses:" > licenses-frontend.txt
        license-checker --summary >> licenses-frontend.txt || echo "License checker not available" >> licenses-frontend.txt
        
        echo "## 📄 License Summary" >> $GITHUB_STEP_SUMMARY
        echo "### Backend" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat licenses-backend.txt >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "License info not available" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        
        echo "### Frontend" >> $GITHUB_STEP_SUMMARY  
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat licenses-frontend.txt >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "License info not available" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          apps/backend/audit-backend.json
          apps/frontend/audit-frontend.json
          apps/backend/outdated-backend.txt
          apps/frontend/outdated-frontend.txt
          apps/backend/licenses-backend.txt
          apps/frontend/licenses-frontend.txt
        retention-days: 30

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, 0BSD
        deny-licenses: GPL-2.0, GPL-3.0, LGPL-2.1, LGPL-3.0
    
    - name: Generate dependency summary
      run: |
        echo "## 🔍 Dependency Review Results" >> $GITHUB_STEP_SUMMARY
        echo "✅ All new dependencies have been reviewed for security vulnerabilities" >> $GITHUB_STEP_SUMMARY
        echo "✅ License compliance verified for all dependencies" >> $GITHUB_STEP_SUMMARY
        echo "✅ No high-risk dependencies detected" >> $GITHUB_STEP_SUMMARY